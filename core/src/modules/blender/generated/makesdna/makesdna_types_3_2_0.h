/*
Copyright (C) 2024 Blender Foundation. All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.

---------------------------------------------------------------------

Various structs from Blender v3.2 makesdna headers.

This file and others like it (makesdna_types_*.h) were generated using
gen_headers.py, which can be found in the project's root directory.
*/

#ifndef MAKESDNA_TYPES_3_2_0_H
#define MAKESDNA_TYPES_3_2_0_H

#include "makesdna_types_2_93_4.h"
#include "makesdna_types_3_0_0.h"
#include "makesdna_types_3_1_0.h"
#include "makesdna_types_2_93_0.h"

struct bAnimVizSettings3_2_0;
struct bPose3_2_0;
struct BrushCurvesSculptSettings3_2_0;
struct Brush3_2_0;
struct CustomDataExternal3_2_0;
struct FluidDomainSettings3_2_0;
struct BuildGpencilModifierData3_2_0;
struct DashGpencilModifierSegment3_2_0;
struct SimplifyGpencilModifierData3_2_0;
struct EnvelopeGpencilModifierData3_2_0;
struct IDOverrideLibrary3_2_0;
struct ID_Runtime_Remap3_2_0;
struct ID_Runtime3_2_0;
struct ID3_2_0;
struct ViewLayerLightgroup3_2_0;
struct LightgroupMembership3_2_0;
struct ViewLayer3_2_0;
struct MInt8Property3_2_0;
struct UVProjectModifierData3_2_0;
struct HookModifierData3_2_0;
struct SurfaceModifierData3_2_0;
struct MDefCell3_2_0;
struct LaplacianDeformModifierData3_2_0;
struct DataTransferModifierData3_2_0;
struct SDefBind3_2_0;
struct SDefVert3_2_0;
struct SurfaceDeformModifierData3_2_0;
struct bNodeSocket3_2_0;
struct bNode3_2_0;
struct NodeCryptomatte3_2_0;
struct NodeGeometryMergeByDistance3_2_0;
struct NodeGeometryStoreNamedAttribute3_2_0;
struct NodeGeometryInputNamedAttribute3_2_0;
struct NodeGeometryDuplicateElements3_2_0;
struct ParticleSettings3_2_0;
struct ImageFormatData3_2_0;
struct PaintModeSettings3_2_0;
struct CurvesSculpt3_2_0;
struct UnifiedPaintSettings3_2_0;
struct ToolSettings3_2_0;
struct StripTransform3_2_0;
struct Sequence3_2_0;
struct MetaStack3_2_0;
struct SeqTimelineChannel3_2_0;
struct Editing3_2_0;
struct SpaceOutliner3_2_0;
struct SpaceSeqRuntime3_2_0;
struct FileDirEntryArr3_2_0;
struct SpaceImage3_2_0;
struct SpreadsheetRowFilter3_2_0;
struct UserDef_Experimental3_2_0;
struct Volume_Runtime3_2_0;
struct Volume3_2_0;
struct wmWindow3_2_0;
struct wmKeyMapItem3_2_0;
struct XrSessionSettings3_2_0;
struct XrComponentPath3_2_0;
struct XrActionMapBinding3_2_0;
struct XrUserPath3_2_0;
struct XrActionMapItem3_2_0;
struct bAction3_2_0;
struct IdAdtTemplate3_2_0;
struct bArmature3_2_0;
struct Palette3_2_0;
struct PaintCurve3_2_0;
struct CacheFile3_2_0;
struct Camera3_2_0;
struct Collection3_2_0;
struct Image3_2_0;
struct Ipo3_2_0;
struct Key3_2_0;
struct LightProbe3_2_0;
struct Mask3_2_0;
struct MetaBall3_2_0;
struct MovieClip3_2_0;
struct NodeImageFile3_2_0;
struct NodeImageMultiFile3_2_0;
struct NodeImageMultiFileSocket3_2_0;
struct BakeData3_2_0;
struct RenderData3_2_0;
struct Scene3_2_0;
struct bScreen3_2_0;
struct bSound3_2_0;
struct SpaceSeq3_2_0;
struct Script3_2_0;
struct Speaker3_2_0;
struct Text3_2_0;
struct UserDef3_2_0;
struct VFont3_2_0;
struct wmXrData3_2_0;
struct wmWindowManager3_2_0;
struct WorkSpace3_2_0;

struct bAnimVizSettings3_2_0 {
    short recalc;
    short path_type;
    short path_step;
    short path_range;
    short path_viewflag;
    short path_bakeflag;
    char _pad[4];
    int path_sf, path_ef;
    int path_bc, path_ac;
};

struct BrushCurvesSculptSettings3_2_0 {
    int add_amount;
    uint32_t flag;
    float minimum_length;
    float curve_length;
};

struct CustomDataExternal3_2_0 {
    char filepath[1024];
};

struct DashGpencilModifierSegment3_2_0 {
    char name[64];
    DashGpencilModifierData3_0_0 *dmd;
    int dash;
    int gap;
    float radius;
    float opacity;
    int mat_nr;
    int flag;
};

struct ID_Runtime_Remap3_2_0 {
    int status;
    int skipped_refcounted;
    int skipped_direct;
    int skipped_indirect;
};

struct ViewLayerLightgroup3_2_0 {
    ViewLayerLightgroup3_2_0 *next, *prev;
    char name[64];
};

struct LightgroupMembership3_2_0 {
    char name[64];
};

struct MInt8Property3_2_0 {
    int8_t i;
};

struct MDefCell3_2_0 {
    int offset;
    int influences_num;
};

struct SDefBind3_2_0 {
    unsigned int *vert_inds;
    unsigned int verts_num;
    int mode;
    float *vert_weights;
    float normal_dist;
    float influence;
};

struct SDefVert3_2_0 {
    SDefBind3_2_0 *binds;
    unsigned int binds_num;
    unsigned int vertex_idx;
};

struct NodeGeometryMergeByDistance3_2_0 {
    uint8_t mode;
};

struct NodeGeometryStoreNamedAttribute3_2_0 {
    int8_t data_type;
    int8_t domain;
};

struct NodeGeometryInputNamedAttribute3_2_0 {
    int8_t data_type;
};

struct NodeGeometryDuplicateElements3_2_0 {
    int8_t domain;
};

struct UnifiedPaintSettings3_2_0 {
    int size;
    float unprojected_radius;
    float alpha;
    float weight;
    float rgb[3];
    float secondary_rgb[3];
    int flag;
    float last_rake[2];
    float last_rake_angle;
    int last_stroke_valid;
    float average_stroke_accum[3];
    int average_stroke_counter;
    float brush_rotation;
    float brush_rotation_sec;
    int anchored_size;
    float overlap_factor;
    char draw_inverted;
    char stroke_active;
    char draw_anchored;
    char do_linear_conversion;
    float last_location[3];
    int last_hit;
    float anchored_initial_mouse[2];
    float pixel_radius;
    float initial_pixel_radius;
    float start_pixel_radius;
    float size_pressure_value;
    float tex_mouse[2];
    float mask_tex_mouse[2];
    void *colorspace;
};

struct StripTransform3_2_0 {
    float xofs;
    float yofs;
    float scale_x;
    float scale_y;
    float rotation;
    float origin[2];
    int filter;
};

struct MetaStack3_2_0 {
    MetaStack3_2_0 *next, *prev;
    ListBase2_93_0 *oldbasep;
    ListBase2_93_0 *old_channels;
    Sequence3_2_0 *parseq;
    int disp_range[2];
};

struct SeqTimelineChannel3_2_0 {
    SeqTimelineChannel3_2_0 *next, *prev;
    char name[64];
    int index;
    int flag;
};

struct SpreadsheetRowFilter3_2_0 {
    SpreadsheetRowFilter3_2_0 *next, *prev;
    char column_name[64];
    uint8_t operation;
    uint8_t flag;
    char _pad0[2];
    int value_int;
    char *value_string;
    float value_float;
    float threshold;
    float value_float2[2];
    float value_float3[3];
    float value_color[4];
    uint8_t value_byte_color[4];
};

struct UserDef_Experimental3_2_0 {
    char use_undo_legacy;
    char no_override_auto_resync;
    char use_cycles_debug;
    char show_asset_debug_info;
    char no_asset_indexing;
    char SANITIZE_AFTER_HERE;
    char use_new_curves_type;
    char use_new_point_cloud_type;
    char use_full_frame_compositor;
    char use_sculpt_tools_tilt;
    char use_extended_asset_browser;
    char use_override_templates;
    char enable_eevee_next;
    char use_sculpt_texture_paint;
    char use_draw_manager_acquire_lock;
    char _pad0[1];
};

struct Volume_Runtime3_2_0 {
    void *grids;
    int frame;
    int default_simplify_level;
    char velocity_x_grid[64];
    char velocity_y_grid[64];
    char velocity_z_grid[64];
};

struct wmKeyMapItem3_2_0 {
    wmKeyMapItem3_2_0 *next, *prev;
    char idname[64];
    IDProperty3_0_0 *properties;
    char propvalue_str[64];
    short propvalue;
    short type;
    int8_t val;
    int8_t direction;
    short shift, ctrl, alt, oskey;
    short keymodifier;
    short flag;
    short maptype;
    short id;
    char _pad[2];
    void *ptr;
};

struct XrComponentPath3_2_0 {
    XrComponentPath3_2_0 *next, *prev;
    char path[192];
};

struct XrUserPath3_2_0 {
    XrUserPath3_2_0 *next, *prev;
    char path[64];
};

struct ID_Runtime3_2_0 {
    ID_Runtime_Remap3_2_0 remap;
};

struct bPose3_2_0 {
    ListBase2_93_0 chanbase;
    void *chanhash;
    bPoseChannel3_0_0 **chan_array;
    short flag;
    char _pad[2];
    float ctime;
    float stride_offset[3];
    float cyclic_offset[3];
    ListBase2_93_0 agroups;
    int active_group;
    int iksolver;
    void *ikdata;
    void *ikparam;
    bAnimVizSettings3_2_0 avs;
};

struct ID3_2_0 {
    void* next, * prev;
    ID3_2_0* newid;
    Library2_93_0* lib;
    AssetMetaData3_0_0* asset_data;
    char name[66];
    short flag;
    int tag;
    int us;
    int icon_id;
    int recalc;
    int recalc_up_to_undo_push;
    int recalc_after_undo_push;
    unsigned int session_uuid;
    IDProperty3_0_0* properties;
    IDOverrideLibrary3_2_0* override_library;
    ID3_2_0* orig_id;
    void* py_instance;
    LibraryWeakReference3_0_0* library_weak_reference;
    ID_Runtime3_2_0 runtime;
};

struct Brush3_2_0 {
    ID3_2_0 id;
    BrushClone2_93_0 clone;
    CurveMapping2_93_0 *curve;
    MTex3_0_0 mtex;
    MTex3_0_0 mask_mtex;
    Brush3_2_0 *toggle_brush;
    void *icon_imbuf;
    PreviewImage2_93_0 *preview;
    ColorBand2_93_0 *gradient;
    PaintCurve3_2_0 *paint_curve;
    char icon_filepath[1024];
    float normal_weight;
    float rake_factor;
    short blend;
    short ob_mode;
    float weight;
    int size;
    int flag;
    int flag2;
    int sampling_flag;
    int mask_pressure;
    float jitter;
    int jitter_absolute;
    int overlay_flags;
    int spacing;
    int smooth_stroke_radius;
    float smooth_stroke_factor;
    float rate;
    float rgb[3];
    float alpha;
    float hardness;
    float flow;
    float wet_mix;
    float wet_persistence;
    float density;
    int paint_flags;
    float tip_roundness;
    float tip_scale_x;
    float secondary_rgb[3];
    float dash_ratio;
    int dash_samples;
    int sculpt_plane;
    float plane_offset;
    int gradient_spacing;
    char gradient_stroke_mode;
    char gradient_fill_mode;
    char _pad0[5];
    char falloff_shape;
    float falloff_angle;
    char sculpt_tool;
    char uv_sculpt_tool;
    char vertexpaint_tool;
    char weightpaint_tool;
    char imagepaint_tool;
    char mask_tool;
    char gpencil_tool;
    char gpencil_vertex_tool;
    char gpencil_sculpt_tool;
    char gpencil_weight_tool;
    char curves_sculpt_tool;
    char _pad1[5];
    float autosmooth_factor;
    float tilt_strength_factor;
    float topology_rake_factor;
    float crease_pinch_factor;
    float normal_radius_factor;
    float area_radius_factor;
    float wet_paint_radius_factor;
    float plane_trim;
    float height;
    float texture_sample_bias;
    int curve_preset;
    float disconnected_distance_max;
    int deform_target;
    int automasking_flags;
    int automasking_boundary_edges_propagation_steps;
    int elastic_deform_type;
    float elastic_deform_volume_preservation;
    int snake_hook_deform_type;
    int pose_deform_type;
    float pose_offset;
    int pose_smooth_iterations;
    int pose_ik_segments;
    int pose_origin_type;
    int boundary_deform_type;
    int boundary_falloff_type;
    float boundary_offset;
    int cloth_deform_type;
    int cloth_force_falloff_type;
    int cloth_simulation_area_type;
    float cloth_mass;
    float cloth_damping;
    float cloth_sim_limit;
    float cloth_sim_falloff;
    float cloth_constraint_softbody_strength;
    int smooth_deform_type;
    float surface_smooth_shape_preservation;
    float surface_smooth_current_vertex;
    int surface_smooth_iterations;
    float multiplane_scrape_angle;
    int smear_deform_type;
    int slide_deform_type;
    int texture_overlay_alpha;
    int mask_overlay_alpha;
    int cursor_overlay_alpha;
    float unprojected_radius;
    float sharp_threshold;
    int blur_kernel_radius;
    int blur_mode;
    float fill_threshold;
    float add_col[4];
    float sub_col[4];
    float stencil_pos[2];
    float stencil_dimension[2];
    float mask_stencil_pos[2];
    float mask_stencil_dimension[2];
    BrushGpencilSettings3_0_0 *gpencil_settings;
    BrushCurvesSculptSettings3_2_0 *curves_sculpt_settings;
};

struct FluidDomainSettings3_2_0 {
    FluidModifierData2_93_4 *fmd;
    void *fluid;
    void *fluid_old;
    void *fluid_mutex;
    Collection3_2_0 *fluid_group;
    Collection3_2_0 *force_group;
    Collection3_2_0 *effector_group;
    void *tex_density;
    void *tex_color;
    void *tex_wt;
    void *tex_shadow;
    void *tex_flame;
    void *tex_flame_coba;
    void *tex_coba;
    void *tex_field;
    void *tex_velocity_x;
    void *tex_velocity_y;
    void *tex_velocity_z;
    void *tex_flags;
    void *tex_range_field;
    Object3_0_0 *guide_parent;
    EffectorWeights3_0_0 *effector_weights;
    float p0[3];
    float p1[3];
    float dp0[3];
    float cell_size[3];
    float global_size[3];
    float prev_loc[3];
    int shift[3];
    float shift_f[3];
    float obj_shift_f[3];
    float imat[4][4];
    float obmat[4][4];
    float fluidmat[4][4];
    float fluidmat_wt[4][4];
    int base_res[3];
    int res_min[3];
    int res_max[3];
    int res[3];
    int total_cells;
    float dx;
    float scale;
    int boundary_width;
    float gravity_final[3];
    int adapt_margin;
    int adapt_res;
    float adapt_threshold;
    int maxres;
    int solver_res;
    int border_collisions;
    int flags;
    float gravity[3];
    int active_fields;
    short type;
    char _pad2[6];
    float alpha;
    float beta;
    int diss_speed;
    float vorticity;
    float active_color[3];
    int highres_sampling;
    float burning_rate, flame_smoke, flame_vorticity;
    float flame_ignition, flame_max_temp;
    float flame_smoke_color[3];
    float noise_strength;
    float noise_pos_scale;
    float noise_time_anim;
    int res_noise[3];
    int noise_scale;
    char _pad3[4];
    float particle_randomness;
    int particle_number;
    int particle_minimum;
    int particle_maximum;
    float particle_radius;
    float particle_band_width;
    float fractions_threshold;
    float fractions_distance;
    float flip_ratio;
    int sys_particle_maximum;
    short simulation_method;
    char _pad4[6];
    float viscosity_value;
    char _pad5[4];
    float surface_tension;
    float viscosity_base;
    int viscosity_exponent;
    float mesh_concave_upper;
    float mesh_concave_lower;
    float mesh_particle_radius;
    int mesh_smoothen_pos;
    int mesh_smoothen_neg;
    int mesh_scale;
    short mesh_generator;
    char _pad6[2];
    int particle_type;
    int particle_scale;
    float sndparticle_tau_min_wc;
    float sndparticle_tau_max_wc;
    float sndparticle_tau_min_ta;
    float sndparticle_tau_max_ta;
    float sndparticle_tau_min_k;
    float sndparticle_tau_max_k;
    int sndparticle_k_wc;
    int sndparticle_k_ta;
    float sndparticle_k_b;
    float sndparticle_k_d;
    float sndparticle_l_min;
    float sndparticle_l_max;
    int sndparticle_potential_radius;
    int sndparticle_update_radius;
    char sndparticle_boundary;
    char sndparticle_combined_export;
    char _pad7[6];
    float guide_alpha;
    int guide_beta;
    float guide_vel_factor;
    int guide_res[3];
    short guide_source;
    char _pad8[2];
    int cache_frame_start;
    int cache_frame_end;
    int cache_frame_pause_data;
    int cache_frame_pause_noise;
    int cache_frame_pause_mesh;
    int cache_frame_pause_particles;
    int cache_frame_pause_guide;
    int cache_frame_offset;
    int cache_flag;
    char cache_mesh_format;
    char cache_data_format;
    char cache_particle_format;
    char cache_noise_format;
    char cache_directory[1024];
    char error[64];
    short cache_type;
    char cache_id[4];
    char _pad9[2];
    float dt;
    float time_total;
    float time_per_frame;
    float frame_length;
    float time_scale;
    float cfl_condition;
    int timesteps_minimum;
    int timesteps_maximum;
    float slice_per_voxel;
    float slice_depth;
    float display_thickness;
    float grid_scale;
    ColorBand2_93_0 *coba;
    float vector_scale;
    float gridlines_lower_bound;
    float gridlines_upper_bound;
    float gridlines_range_color[4];
    char axis_slice_method;
    char slice_axis;
    char show_gridlines;
    char draw_velocity;
    char vector_draw_type;
    char vector_field;
    char vector_scale_with_magnitude;
    char vector_draw_mac_components;
    char use_coba;
    char coba_field;
    char interp_method;
    char gridlines_color_field;
    char gridlines_cell_filter;
    char _pad10[3];
    float velocity_scale;
    int openvdb_compression;
    float clipping;
    char openvdb_data_depth;
    char _pad11[7];
    int viewsettings;
    char _pad12[4];
    void *point_cache[2];
    ListBase2_93_0 ptcaches[2];
    int cache_comp;
    int cache_high_comp;
    char cache_file_format;
    char _pad13[7];
};

struct BuildGpencilModifierData3_2_0 {
    GpencilModifierData2_93_0 modifier;
    Material2_93_0 *material;
    char layername[64];
    int pass_index;
    char materialname[64];
    int layer_pass;
    float start_frame;
    float end_frame;
    float start_delay;
    float length;
    short flag;
    short mode;
    short transition;
    short time_alignment;
    Object3_0_0 *object;
    float percentage_fac;
    float fade_fac;
    char target_vgname[64];
    float fade_opacity_strength;
    float fade_thickness_strength;
};

struct SimplifyGpencilModifierData3_2_0 {
    GpencilModifierData2_93_0 modifier;
    Material2_93_0 *material;
    char layername[64];
    char materialname[64];
    int pass_index;
    int flag;
    float factor;
    short mode;
    short step;
    int layer_pass;
    float length;
    float sharp_threshold;
    float distance;
};

struct EnvelopeGpencilModifierData3_2_0 {
    GpencilModifierData2_93_0 modifier;
    Material2_93_0 *material;
    char layername[64];
    char vgname[64];
    int pass_index;
    int flag;
    int mode;
    int mat_nr;
    float thickness;
    float strength;
    int skip;
    int layer_pass;
    int spread;
    char _pad[4];
};

struct IDOverrideLibrary3_2_0 {
    ID3_2_0 *reference;
    ListBase2_93_0 properties;
    ID3_2_0 *hierarchy_root;
    ID3_2_0 *storage;
    void *runtime;
    unsigned int flag;
    char _pad_1[4];
};

struct ViewLayer3_2_0 {
    ViewLayer3_2_0 *next, *prev;
    char name[64];
    short flag;
    char _pad[6];
    ListBase2_93_0 object_bases;
    void *stats;
    Base2_93_0 *basact;
    ListBase2_93_0 layer_collections;
    LayerCollection2_93_0 *active_collection;
    int layflag;
    int passflag;
    float pass_alpha_threshold;
    short cryptomatte_flag;
    short cryptomatte_levels;
    char _pad1[4];
    int samples;
    Material2_93_0 *mat_override;
    IDProperty3_0_0 *id_properties;
    FreestyleConfig2_93_0 freestyle_config;
    ViewLayerEEVEE2_93_0 eevee;
    ListBase2_93_0 aovs;
    ViewLayerAOV2_93_0 *active_aov;
    ListBase2_93_0 lightgroups;
    ViewLayerLightgroup3_2_0 *active_lightgroup;
    ListBase2_93_0 drawdata;
    Base2_93_0 **object_bases_array;
    void *object_bases_hash;
};

struct UVProjectModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    Object3_0_0 *projectors[10];
    char _pad2[4];
    int projectors_num;
    float aspectx, aspecty;
    float scalex, scaley;
    char uvlayer_name[64];
    int uvlayer_tmp;
    char _pad[4];
};

struct HookModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    Object3_0_0 *object;
    char subtarget[64];
    char flag;
    char falloff_type;
    char _pad[6];
    float parentinv[4][4];
    float cent[3];
    float falloff;
    CurveMapping2_93_0 *curfalloff;
    int *indexar;
    int indexar_num;
    float force;
    char name[64];
    void *_pad1;
};

struct SurfaceModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    MVert3_1_0 *x;
    MVert3_1_0 *v;
    Mesh3_1_0 *mesh;
    void *bvhtree;
    int cfra, verts_num;
};

struct LaplacianDeformModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    char anchor_grp_name[64];
    int verts_num, repeat;
    float *vertexco;
    void *cache_system;
    short flag;
    char _pad[6];
};

struct DataTransferModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    Object3_0_0 *ob_source;
    int data_types;
    int vmap_mode;
    int emap_mode;
    int lmap_mode;
    int pmap_mode;
    float map_max_distance;
    float map_ray_radius;
    float islands_precision;
    char _pad1[4];
    int layers_select_src[5];
    int layers_select_dst[5];
    int mix_mode;
    float mix_factor;
    char defgrp_name[64];
    int flags;
    void *_pad2;
};

struct SurfaceDeformModifierData3_2_0 {
    ModifierData3_1_0 modifier;
    void *depsgraph;
    Object3_0_0 *target;
    SDefVert3_2_0 *verts;
    float falloff;
    unsigned int mesh_verts_num, bind_verts_num, polys_num;
    int flags;
    float mat[4][4];
    float strength;
    char defgrp_name[64];
    void *_pad1;
};

struct bNodeSocket3_2_0 {
    bNodeSocket3_2_0 *next, *prev;
    IDProperty3_0_0 *prop;
    char identifier[64];
    char name[64];
    void *storage;
    short type;
    short flag;
    short limit;
    short in_out;
    void *typeinfo;
    char idname[64];
    float locx, locy;
    void *default_value;
    short stack_index;
    short stack_type;
    char display_shape;
    char attribute_domain;
    short total_inputs;
    char label[64];
    char description[64];
    char *default_attribute_name;
    void *cache;
    int own_index;
    int to_index;
    bNodeSocket3_2_0 *groupsock;
    bNodeLink2_93_0 *link;
    bNodeStack2_93_0 ns;
    const void *declaration;
    uint32_t changed_flag;
    char _pad[4];
};

struct bNode3_2_0 {
    bNode3_2_0 *next, *prev;
    IDProperty3_0_0 *prop;
    void *typeinfo;
    char idname[64];
    char name[64];
    int flag;
    short type;
    short done, level;
    uint8_t need_exec;
    char _pad2[5];
    uint32_t changed_flag;
    float color[3];
    ListBase2_93_0 inputs, outputs;
    bNode3_2_0 *parent;
    ID3_2_0 *id;
    void *storage;
    bNode3_2_0 *original;
    ListBase2_93_0 internal_links;
    float locx, locy;
    float width, height;
    float miniwidth;
    float offsetx, offsety;
    float anim_init_locx;
    float anim_ofsx;
    int update;
    char label[64];
    short custom1, custom2;
    float custom3, custom4;
    char _pad1[4];
    rctf2_93_0 totr;
    rctf2_93_0 prvr;
    short preview_xsize, preview_ysize;
    short tmp_flag;
    char _pad0;
    char iter_flag;
    void *declaration;
};

struct NodeCryptomatte3_2_0 {
    ImageUser3_0_0 iuser;
    ListBase2_93_0 entries;
    char layer_name[64];
    char *matte_id;
    int inputs_num;
    char _pad[4];
    NodeCryptomatte_Runtime2_93_0 runtime;
};

struct ParticleSettings3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    BoidSettings2_93_0 *boids;
    SPHFluidSettings2_93_0 *fluid;
    EffectorWeights3_0_0 *effector_weights;
    Collection3_2_0 *collision_group;
    int flag;
    char _pad1[4];
    short type, from, distr, texact;
    short phystype, rotmode, avemode, reactevent;
    int draw;
    float draw_size;
    short draw_as, childtype;
    char _pad2[4];
    short ren_as, subframes, draw_col;
    short draw_step, ren_step;
    short hair_step, keys_step;
    short adapt_angle, adapt_pix;
    short disp, omat, interpolation, integrator;
    short rotfrom;
    short kink, kink_axis;
    short bb_align, bb_uv_split, bb_anim, bb_split_offset;
    float bb_tilt, bb_rand_tilt, bb_offset[2], bb_size[2], bb_vel_head, bb_vel_tail;
    float color_vec_max;
    float sta, end, lifetime, randlife;
    float timetweak, courant_target;
    float jitfac, eff_hair, grid_rand, ps_offset[1];
    int totpart, userjit, grid_res, effector_amount;
    short time_flag;
    char _pad0[6];
    float normfac, obfac, randfac, partfac, tanfac, tanphase, reactfac;
    float ob_vel[3];
    float avefac, phasefac, randrotfac, randphasefac;
    float mass, size, randsize;
    float acc[3], dragfac, brownfac, dampfac;
    float randlength;
    int child_flag;
    char _pad3[4];
    int child_percent, child_render_percent;
    float parents, childsize, childrandsize;
    float childrad, childflat;
    float clumpfac, clumppow;
    float kink_amp, kink_freq, kink_shape, kink_flat;
    float kink_amp_clump;
    int kink_extra_steps;
    char _pad4[4];
    float kink_axis_random, kink_amp_random;
    float rough1, rough1_size;
    float rough2, rough2_size, rough2_thres;
    float rough_end, rough_end_shape;
    float clength, clength_thres;
    float parting_fac;
    float parting_min, parting_max;
    float branch_thres;
    float draw_line[2];
    float path_start, path_end;
    int trail_count;
    int keyed_loops;
    CurveMapping2_93_0 *clumpcurve;
    CurveMapping2_93_0 *roughcurve;
    float clump_noise_size;
    float bending_random;
    MTex3_0_0 *mtex[18];
    Collection3_2_0 *instance_collection;
    ListBase2_93_0 instance_weights;
    Collection3_2_0 *force_group;
    Object3_0_0 *instance_object;
    Object3_0_0 *bb_ob;
    Ipo3_2_0 *ipo;
    PartDeflect2_93_0 *pd;
    PartDeflect2_93_0 *pd2;
    short use_modifier_stack;
    char _pad5[2];
    short shape_flag;
    char _pad6[2];
    float twist;
    char _pad8[4];
    float shape;
    float rad_root, rad_tip, rad_scale;
    CurveMapping2_93_0 *twistcurve;
    void *_pad7;
};

struct ImageFormatData3_2_0 {
    char imtype;
    char depth;
    char planes;
    char flag;
    char quality;
    char compress;
    char exr_codec;
    char cineon_flag;
    short cineon_white, cineon_black;
    float cineon_gamma;
    char jp2_flag;
    char jp2_codec;
    char tiff_codec;
    char _pad[4];
    char views_format;
    Stereo3dFormat2_93_0 stereo3d_format;
    char color_management;
    char _pad1[7];
    ColorManagedViewSettings2_93_0 view_settings;
    ColorManagedDisplaySettings2_93_0 display_settings;
    ColorManagedColorspaceSettings2_93_0 linear_colorspace_settings;
};

struct PaintModeSettings3_2_0 {
    char canvas_source;
    char _pad[7];
    Image3_2_0 *canvas_image;
    ImageUser3_0_0 image_user;
};

struct CurvesSculpt3_2_0 {
    Paint2_93_0 paint;
};

struct ToolSettings3_2_0 {
    VPaint2_93_0 *vpaint;
    VPaint2_93_0 *wpaint;
    Sculpt2_93_0 *sculpt;
    UvSculpt2_93_0 *uvsculpt;
    GpPaint2_93_0 *gp_paint;
    GpVertexPaint2_93_0 *gp_vertexpaint;
    GpSculptPaint2_93_0 *gp_sculptpaint;
    GpWeightPaint2_93_0 *gp_weightpaint;
    CurvesSculpt3_2_0 *curves_sculpt;
    float vgroup_weight;
    float doublimit;
    char automerge;
    char object_flag;
    char selectmode;
    char unwrapper;
    char uvcalc_flag;
    char uv_flag;
    char uv_selectmode;
    char uv_sticky;
    float uvcalc_margin;
    short autoik_chainlen;
    char gpencil_flags;
    char gpencil_v3d_align;
    char gpencil_v2d_align;
    char _pad0[2];
    char annotate_v3d_align;
    short annotate_thickness;
    char gpencil_selectmode_edit;
    char gpencil_selectmode_sculpt;
    GP_Sculpt_Settings2_93_0 gp_sculpt;
    GP_Interpolate_Settings2_93_0 gp_interpolate;
    ImagePaintSettings2_93_0 imapaint;
    PaintModeSettings3_2_0 paint_mode;
    ParticleEditSettings3_0_0 particle;
    float proportional_size;
    float select_thresh;
    short autokey_flag;
    char autokey_mode;
    char keyframe_type;
    char multires_subdiv_type;
    char edge_mode;
    char edge_mode_live_unwrap;
    char transform_pivot_point;
    char transform_flag;
    char snap_mode;
    char snap_node_mode;
    char snap_uv_mode;
    char snap_flag;
    char snap_flag_node;
    char snap_flag_seq;
    char snap_uv_flag;
    char snap_target;
    char snap_transform_mode_flag;
    char proportional_edit, prop_mode;
    char proportional_objects;
    char proportional_mask;
    char proportional_action;
    char proportional_fcurve;
    char lock_markers;
    char auto_normalize;
    char wpaint_lock_relative;
    char multipaint;
    char weightuser;
    char vgroupsubset;
    char gpencil_selectmode_vertex;
    char uv_sculpt_settings;
    char uv_relax_method;
    char workspace_tool_type;
    short sculpt_paint_settings;
    int sculpt_paint_unified_size;
    float sculpt_paint_unified_unprojected_radius;
    float sculpt_paint_unified_alpha;
    UnifiedPaintSettings3_2_0 unified_paint_settings;
    CurvePaintSettings2_93_0 curve_paint_settings;
    MeshStatVis2_93_0 statvis;
    float normal_vector[3];
    char _pad6[4];
    CurveProfile2_93_0 *custom_bevel_profile_preset;
    SequencerToolSettings3_0_0 *sequencer_tool_settings;
};

struct Sequence3_2_0 {
    Sequence3_2_0 *next, *prev;
    void *tmp;
    void *lib;
    char name[64];
    int flag, type;
    int len;
    int start;
    int startofs, endofs;
    int startstill, endstill;
    int machine;
    int _pad3;
    int startdisp, enddisp;
    float sat;
    float mul;
    float _pad;
    short anim_preseek;
    short streamindex;
    int multicam_source;
    int clip_flag;
    Strip2_93_0 *strip;
    Ipo3_2_0 *ipo;
    Scene3_2_0 *scene;
    Object3_0_0 *scene_camera;
    MovieClip3_2_0 *clip;
    Mask3_2_0 *mask;
    ListBase2_93_0 anims;
    float effect_fader;
    float speed_fader;
    Sequence3_2_0 *seq1, *seq2, *seq3;
    ListBase2_93_0 seqbase;
    ListBase2_93_0 channels;
    bSound3_2_0 *sound;
    void *scene_sound;
    float volume;
    float pitch, pan;
    float strobe;
    void *effectdata;
    int anim_startofs;
    int anim_endofs;
    int blend_mode;
    float blend_opacity;
    int8_t color_tag;
    char alpha_mode;
    char _pad4[2];
    int cache_flag;
    int sfra;
    char views_format;
    char _pad1[3];
    Stereo3dFormat2_93_0 *stereo3d_format;
    IDProperty3_0_0 *prop;
    ListBase2_93_0 modifiers;
    SequenceRuntime2_93_0 runtime;
};

struct Editing3_2_0 {
    ListBase2_93_0 *seqbasep;
    ListBase2_93_0 *displayed_channels;
    void *_pad0;
    ListBase2_93_0 seqbase;
    ListBase2_93_0 metastack;
    ListBase2_93_0 channels;
    Sequence3_2_0 *act_seq;
    char act_imagedir[1024];
    char act_sounddir[1024];
    char proxy_dir[1024];
    int proxy_storage;
    int overlay_frame_ofs, overlay_frame_abs;
    int overlay_frame_flag;
    rctf2_93_0 overlay_frame_rect;
    void *cache;
    float recycle_max_cost;
    int cache_flag;
    void *prefetch_job;
    int64_t disk_cache_timestamp;
    EditingRuntime3_0_0 runtime;
    void *_pad1;
};

struct SpaceOutliner3_2_0 {
    SpaceLink2_93_0 *next, *prev;
    ListBase2_93_0 regionbase;
    char spacetype;
    char link_flag;
    char _pad0[6];
    View2D2_93_0 v2d;
    ListBase2_93_0 tree;
    void *treestore;
    char search_string[64];
    TreeStoreElem2_93_0 search_tse;
    short flag;
    short outlinevis;
    short lib_override_view_mode;
    short storeflag;
    char search_flags;
    char _pad[6];
    char sync_select_dirty;
    int filter;
    char filter_state;
    char show_restrict_flags;
    short filter_id_type;
    void *runtime;
};

struct SpaceSeqRuntime3_2_0 {
    rctf2_93_0 last_thumbnail_area;
    void *last_displayed_thumbnails;
    int rename_channel_index;
    float timeline_clamp_custom_range;
};

struct FileDirEntryArr3_2_0 {
    ListBase2_93_0 entries;
    int entries_num;
    int entries_filtered_num;
    char root[1024];
};

struct SpaceImage3_2_0 {
    SpaceLink2_93_0 *next, *prev;
    ListBase2_93_0 regionbase;
    char spacetype;
    char link_flag;
    char _pad0[6];
    Image3_2_0 *image;
    ImageUser3_0_0 iuser;
    Scopes2_93_0 scopes;
    Histogram2_93_0 sample_line_hist;
    bGPdata3_0_0 *gpd;
    float cursor[2];
    float xof, yof;
    float zoom;
    float centx, centy;
    char mode;
    char mode_prev;
    char pin;
    char pixel_snap_mode;
    char lock;
    char dt_uv;
    char dt_uvstretch;
    char around;
    char _pad1[4];
    int flag;
    float uv_opacity;
    int tile_grid_shape[2];
    int custom_grid_subdiv;
    char _pad3[4];
    MaskSpaceInfo2_93_0 mask_info;
    SpaceImageOverlay2_93_0 overlay;
};

struct Volume3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    char filepath[1024];
    PackedFile2_93_0 *packedfile;
    char is_sequence;
    char sequence_mode;
    char _pad1[2];
    int frame_start;
    int frame_duration;
    int frame_offset;
    int flag;
    int active_grid;
    Material2_93_0 **mat;
    short totcol;
    short _pad2[3];
    VolumeRender2_93_0 render;
    VolumeDisplay2_93_0 display;
    char velocity_grid[64];
    char _pad3[3];
    char velocity_unit;
    float velocity_scale;
    void *batch_cache;
    Volume_Runtime3_2_0 runtime;
};

struct wmWindow3_2_0 {
    wmWindow3_2_0 *next, *prev;
    void *ghostwin;
    void *gpuctx;
    wmWindow3_2_0 *parent;
    Scene3_2_0 *scene;
    Scene3_2_0 *new_scene;
    char view_layer_name[64];
    WorkSpaceInstanceHook2_93_0 *workspace_hook;
    ScrAreaMap2_93_0 global_areas;
    bScreen3_2_0 *screen;
    int winid;
    short posx, posy, sizex, sizey;
    char windowstate;
    char active;
    short cursor;
    short lastcursor;
    short modalcursor;
    short grabcursor;
    char addmousemove;
    char tag_cursor_refresh;
    char event_queue_check_click;
    char event_queue_check_drag;
    char event_queue_check_drag_handled;
    char _pad0[1];
    short pie_event_type_lock;
    short pie_event_type_last;
    void *eventstate;
    void *event_last_handled;
    void *ime_data;
    ListBase2_93_0 event_queue;
    ListBase2_93_0 handlers;
    ListBase2_93_0 modalhandlers;
    ListBase2_93_0 gesture;
    Stereo3dFormat2_93_0 *stereo3d_format;
    ListBase2_93_0 drawcalls;
    void *cursor_keymap_status;
};

struct XrSessionSettings3_2_0 {
    View3DShading2_93_0 shading;
    float base_scale;
    char _pad[3];
    char base_pose_type;
    Object3_0_0 *base_pose_object;
    float base_pose_location[3];
    float base_pose_angle;
    char draw_flags;
    char controller_draw_style;
    char _pad2[2];
    float clip_start, clip_end;
    int flag;
    int object_type_exclude_viewport;
    int object_type_exclude_select;
};

struct XrActionMapBinding3_2_0 {
    XrActionMapBinding3_2_0 *next, *prev;
    char name[64];
    char profile[256];
    ListBase2_93_0 component_paths;
    float float_threshold;
    short axis_flag;
    char _pad[2];
    float pose_location[3];
    float pose_rotation[3];
};

struct XrActionMapItem3_2_0 {
    XrActionMapItem3_2_0 *next, *prev;
    char name[64];
    char type;
    char _pad[7];
    ListBase2_93_0 user_paths;
    char op[64];
    IDProperty3_0_0 *op_properties;
    void *op_properties_ptr;
    short op_flag;
    short action_flag;
    short haptic_flag;
    short pose_flag;
    char haptic_name[64];
    float haptic_duration;
    float haptic_frequency;
    float haptic_amplitude;
    short selbinding;
    char _pad3[2];
    ListBase2_93_0 bindings;
};

struct bAction3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 curves;
    ListBase2_93_0 chanbase;
    ListBase2_93_0 groups;
    ListBase2_93_0 markers;
    int flag;
    int active_marker;
    int idroot;
    char _pad[4];
    float frame_start, frame_end;
    PreviewImage2_93_0 *preview;
};

struct IdAdtTemplate3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
};

struct bArmature3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    ListBase2_93_0 bonebase;
    void *bonehash;
    void *_pad1;
    ListBase2_93_0 *edbo;
    Bone3_0_0 *act_bone;
    void *act_edbone;
    char needs_flush_to_id;
    char _pad0[3];
    int flag;
    int drawtype;
    short deformflag;
    short pathflag;
    unsigned int layer_used;
    unsigned int layer, layer_protected;
    float axes_position;
};

struct Palette3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 colors;
    int active_color;
    char _pad[4];
};

struct PaintCurve3_2_0 {
    ID3_2_0 id;
    PaintCurvePoint2_93_0 *points;
    int tot_points;
    int add_index;
};

struct CacheFile3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    ListBase2_93_0 object_paths;
    ListBase2_93_0 layers;
    char filepath[1024];
    char is_sequence;
    char forward_axis;
    char up_axis;
    char override_frame;
    float scale;
    float frame;
    float frame_offset;
    char _pad[4];
    short flag;
    char type;
    char use_render_procedural;
    char _pad1[3];
    char use_prefetch;
    int prefetch_cache_size;
    int active_layer;
    char _pad2[3];
    char velocity_unit;
    char velocity_name[64];
    void *handle;
    char handle_filepath[1024];
    void *handle_readers;
};

struct Camera3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    char type;
    char dtx;
    short flag;
    float passepartalpha;
    float clip_start, clip_end;
    float lens, ortho_scale, drawsize;
    float sensor_x, sensor_y;
    float shiftx, shifty;
    float dof_distance;
    Ipo3_2_0 *ipo;
    Object3_0_0 *dof_ob;
    GPUDOFSettings2_93_0 gpu_dof;
    CameraDOFSettings2_93_0 dof;
    ListBase2_93_0 bg_images;
    char sensor_fit;
    char _pad[7];
    CameraStereoSettings2_93_0 stereo;
    Camera_Runtime2_93_0 runtime;
};

struct Collection3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 gobject;
    ListBase2_93_0 children;
    PreviewImage2_93_0 *preview;
    unsigned int layer;
    float instance_offset[3];
    short flag;
    short tag;
    short lineart_usage;
    unsigned char lineart_flags;
    unsigned char lineart_intersection_mask;
    char _pad[6];
    int16_t color_tag;
    ListBase2_93_0 object_cache;
    ListBase2_93_0 object_cache_instanced;
    ListBase2_93_0 parents;
    SceneCollection2_93_0 *collection;
    ViewLayer3_2_0 *view_layer;
};

struct Image3_2_0 {
    ID3_2_0 id;
    char filepath[1024];
    void *cache;
    void *gputexture[3][2][2];
    ListBase2_93_0 anims;
    void *rr;
    ListBase2_93_0 renderslots;
    short render_slot, last_render_slot;
    int flag;
    short source, type;
    int lastframe;
    int gpuframenr;
    short gpuflag;
    short gpu_pass;
    short gpu_layer;
    short gpu_view;
    char _pad2[4];
    PackedFile2_93_0 *packedfile;
    ListBase2_93_0 packedfiles;
    PreviewImage2_93_0 *preview;
    int lastused;
    int gen_x, gen_y;
    char gen_type, gen_flag;
    short gen_depth;
    float gen_color[4];
    float aspx, aspy;
    ColorManagedColorspaceSettings2_93_0 colorspace_settings;
    char alpha_mode;
    char _pad;
    char eye;
    char views_format;
    int active_tile_index;
    ListBase2_93_0 tiles;
    ListBase2_93_0 views;
    Stereo3dFormat2_93_0 *stereo3d_format;
    Image_Runtime3_1_0 runtime;
};

struct Ipo3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 curve;
    rctf2_93_0 cur;
    short blocktype, showkey;
    short muteipo;
    char _pad[2];
};

struct Key3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    KeyBlock2_93_0 *refkey;
    char elemstr[32];
    int elemsize;
    char _pad[4];
    ListBase2_93_0 block;
    Ipo3_2_0 *ipo;
    ID3_2_0 *from;
    int totkey;
    short flag;
    char type;
    char _pad2;
    float ctime;
    int uidgen;
};

struct LightProbe3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    char type;
    char flag;
    char attenuation_type;
    char parallax_type;
    float distinf;
    float distpar;
    float falloff;
    float clipsta, clipend;
    float vis_bias, vis_bleedbias;
    float vis_blur;
    float intensity;
    int grid_resolution_x;
    int grid_resolution_y;
    int grid_resolution_z;
    char _pad1[4];
    Object3_0_0 *parallax_ob;
    Image3_2_0 *image;
    Collection3_2_0 *visibility_grp;
    float distfalloff, distgridinf;
    char _pad[8];
};

struct Mask3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    ListBase2_93_0 masklayers;
    int masklay_act;
    int masklay_tot;
    int sfra, efra;
    int flag;
    char _pad[4];
};

struct MetaBall3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    ListBase2_93_0 elems;
    ListBase2_93_0 disp;
    ListBase2_93_0 *editelems;
    Ipo3_2_0 *ipo;
    Material2_93_0 **mat;
    char flag, flag2;
    short totcol;
    char texflag;
    char _pad[2];
    char needs_flush_to_id;
    float loc[3];
    float size[3];
    float rot[3];
    float wiresize, rendersize;
    float thresh;
    MetaElem2_93_0 *lastelem;
    void *batch_cache;
};

struct MovieClip3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    char filepath[1024];
    int source;
    int lastframe;
    int lastsize[2];
    float aspx, aspy;
    void *anim;
    void *cache;
    bGPdata3_0_0 *gpd;
    MovieTracking2_93_0 tracking;
    void *tracking_context;
    MovieClipProxy2_93_0 proxy;
    int flag;
    int len;
    int start_frame;
    int frame_offset;
    ColorManagedColorspaceSettings2_93_0 colorspace_settings;
    MovieClip_Runtime2_93_0 runtime;
};

struct NodeImageFile3_2_0 {
    char name[1024];
    ImageFormatData3_2_0 im_format;
    int sfra, efra;
};

struct NodeImageMultiFile3_2_0 {
    char base_path[1024];
    ImageFormatData3_2_0 format;
    int sfra , efra;
    int active_input;
    char _pad[4];
};

struct NodeImageMultiFileSocket3_2_0 {
    short use_render_format;
    short use_node_format;
    char save_as_render;
    char _pad1[3];
    char path[1024];
    ImageFormatData3_2_0 format;
    char layer[30];
    char _pad2[2];
};

struct BakeData3_2_0 {
    ImageFormatData3_2_0 im_format;
    char filepath[1024];
    short width, height;
    short margin, flag;
    float cage_extrusion;
    float max_ray_distance;
    int pass_filter;
    char normal_swizzle[3];
    char normal_space;
    char target;
    char save_mode;
    char margin_type;
    char _pad[5];
    Object3_0_0 *cage_object;
};

struct RenderData3_2_0 {
    ImageFormatData3_2_0 im_format;
    AviCodecData2_93_0 *avicodecdata;
    FFMpegCodecData3_1_0 ffcodecdata;
    int cfra, sfra, efra;
    float subframe;
    int psfra, pefra;
    int images, framapto;
    short flag, threads;
    float framelen, blurfac;
    int frame_step;
    short stereomode;
    short dimensionspreset;
    short size;
    char _pad6[2];
    int xsch;
    int ysch;
    int tilex;
    int tiley;
    short planes;
    short imtype;
    short subimtype;
    short quality;
    char use_lock_interface;
    char _pad7[3];
    int scemode;
    int mode;
    short frs_sec;
    char alphamode;
    char _pad0[1];
    rctf2_93_0 border;
    ListBase2_93_0 layers;
    short actlay;
    char _pad1[2];
    float xasp, yasp;
    float frs_sec_base;
    float gauss;
    int color_mgt_flag;
    float dither_intensity;
    short bake_mode, bake_flag;
    short bake_margin, bake_samples;
    short bake_margin_type;
    char _pad9[6];
    float bake_biasdist, bake_user_scale;
    char pic[1024];
    int stamp;
    short stamp_font_id;
    char _pad3[2];
    char stamp_udata[768];
    float fg_stamp[4];
    float bg_stamp[4];
    char seq_prev_type;
    char seq_rend_type;
    char seq_flag;
    char _pad5[3];
    short simplify_subsurf;
    short simplify_subsurf_render;
    short simplify_gpencil;
    float simplify_particles;
    float simplify_particles_render;
    float simplify_volumes;
    int line_thickness_mode;
    float unit_line_thickness;
    char engine[32];
    char _pad2[2];
    short perf_flag;
    BakeData3_2_0 bake;
    int _pad8;
    short preview_pixel_size;
    short _pad4;
    ListBase2_93_0 views;
    short actview;
    short views_format;
    short hair_type, hair_subdiv;
    CurveMapping2_93_0 mblur_shutter_curve;
};

struct Scene3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    Object3_0_0 *camera;
    World2_93_0 *world;
    Scene3_2_0 *set;
    ListBase2_93_0 base;
    Base2_93_0 *basact;
    void *_pad1;
    View3DCursor2_93_0 cursor;
    unsigned int lay;
    int layact;
    char _pad2[4];
    short flag;
    char use_nodes;
    char _pad3[1];
    void *nodetree;
    Editing3_2_0 *ed;
    ToolSettings3_2_0 *toolsettings;
    void *_pad4;
    DisplaySafeAreas2_93_0 safe_areas;
    RenderData3_2_0 r;
    AudioData2_93_0 audio;
    ListBase2_93_0 markers;
    ListBase2_93_0 transform_spaces;
    TransformOrientationSlot2_93_0 orientation_slots[4];
    void *sound_scene;
    void *playback_handle;
    void *sound_scrub_handle;
    void *speaker_handles;
    void *fps_info;
    void *depsgraph_hash;
    char _pad7[4];
    int active_keyingset;
    ListBase2_93_0 keyingsets;
    UnitSettings2_93_0 unit;
    bGPdata3_0_0 *gpd;
    MovieClip3_2_0 *clip;
    PhysicsSettings3_0_0 physics_settings;
    void *_pad8;
    CustomData_MeshMasks2_93_0 customdata_mask;
    CustomData_MeshMasks2_93_0 customdata_mask_modal;
    ColorManagedViewSettings2_93_0 view_settings;
    ColorManagedDisplaySettings2_93_0 display_settings;
    ColorManagedColorspaceSettings2_93_0 sequencer_colorspace_settings;
    RigidBodyWorld2_93_0 *rigidbody_world;
    PreviewImage2_93_0 *preview;
    ListBase2_93_0 view_layers;
    Collection3_2_0 *master_collection;
    SceneCollection2_93_0 *collection;
    IDProperty3_0_0 *layer_properties;
    void *_pad9;
    SceneDisplay2_93_0 display;
    SceneEEVEE2_93_0 eevee;
    SceneGpencil2_93_0 grease_pencil_settings;
};

struct bScreen3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 vertbase;
    ListBase2_93_0 edgebase;
    ListBase2_93_0 areabase;
    ListBase2_93_0 regionbase;
    Scene3_2_0 *scene;
    short flag;
    short winid;
    short redraws_flag;
    char temp;
    char state;
    char do_draw;
    char do_refresh;
    char do_draw_gesture;
    char do_draw_paintcursor;
    char do_draw_drag;
    char skip_handling;
    char scrubbing;
    char _pad[1];
    ARegion2_93_0 *active_region;
    void *animtimer;
    void  *context;
    void *tool_tip;
    PreviewImage2_93_0 *preview;
};

struct bSound3_2_0 {
    ID3_2_0 id;
    char filepath[1024];
    PackedFile2_93_0 *packedfile;
    void *handle;
    PackedFile2_93_0 *newpackedfile;
    Ipo3_2_0 *ipo;
    float volume;
    float attenuation;
    float pitch;
    float min_gain;
    float max_gain;
    float distance;
    short flags;
    short tags;
    char _pad[4];
    double offset_time;
    void *cache;
    void *waveform;
    void *playback_handle;
    void *spinlock;
};

struct SpaceSeq3_2_0 {
    SpaceLink2_93_0 *next, *prev;
    ListBase2_93_0 regionbase;
    char spacetype;
    char link_flag;
    char _pad0[6];
    View2D2_93_0 v2d;
    float xof , yof;
    short mainb;
    short render_size;
    short chanshown;
    short zebra;
    int flag;
    float zoom;
    char view;
    char overlay_frame_type;
    char draw_flag;
    char gizmo_flag;
    char _pad[4];
    float cursor[2];
    bGPdata3_0_0 *gpd;
    SequencerScopes2_93_0 scopes;
    SequencerPreviewOverlay3_0_0 preview_overlay;
    SequencerTimelineOverlay3_0_0 timeline_overlay;
    char multiview_eye;
    char _pad2[7];
    SpaceSeqRuntime3_2_0 runtime;
};

struct Script3_2_0 {
    ID3_2_0 id;
    void *py_draw;
    void *py_event;
    void *py_button;
    void *py_browsercallback;
    void *py_globaldict;
    int flags, lastspace;
    char scriptname[1024];
    char scriptarg[256];
};

struct Speaker3_2_0 {
    ID3_2_0 id;
    AnimData2_93_0 *adt;
    bSound3_2_0 *sound;
    float volume_max;
    float volume_min;
    float distance_max;
    float distance_reference;
    float attenuation;
    float cone_angle_outer;
    float cone_angle_inner;
    float cone_volume_outer;
    float volume;
    float pitch;
    short flag;
    char _pad1[6];
};

struct Text3_2_0 {
    ID3_2_0 id;
    char *filepath;
    void *compiled;
    int flags;
    char _pad0[4];
    ListBase2_93_0 lines;
    TextLine2_93_0 *curl, *sell;
    int curc, selc;
    double mtime;
};

struct UserDef3_2_0 {
    int versionfile, subversionfile;
    int flag;
    unsigned int dupflag;
    char pref_flag;
    char savetime;
    char mouse_emulate_3_button_modifier;
    char _pad4[1];
    char tempdir[768];
    char fontdir[768];
    char renderdir[1024];
    char render_cachedir[768];
    char textudir[768];
    char pythondir[768];
    char sounddir[768];
    char i18ndir[768];
    char image_editor[1024];
    char anim_player[1024];
    int anim_player_preset;
    short v2d_min_gridsize;
    short timecode_style;
    short versions;
    short dbl_click_time;
    char _pad0[3];
    char mini_axis_type;
    int uiflag;
    char uiflag2;
    char gpu_flag;
    char _pad8[6];
    char app_flag;
    char viewzoom;
    short language;
    int mixbufsize;
    int audiodevice;
    int audiorate;
    int audioformat;
    int audiochannels;
    float ui_scale;
    int ui_line_width;
    int dpi;
    float dpi_fac;
    float inv_dpi_fac;
    float pixelsize;
    int virtual_pixel;
    int scrollback;
    char node_margin;
    char _pad2[1];
    short transopts;
    short menuthreshold1, menuthreshold2;
    char app_template[64];
    ListBase2_93_0 themes;
    ListBase2_93_0 uifonts;
    ListBase2_93_0 uistyles;
    ListBase2_93_0 user_keymaps;
    ListBase2_93_0 user_keyconfig_prefs;
    ListBase2_93_0 addons;
    ListBase2_93_0 autoexec_paths;
    ListBase2_93_0 user_menus;
    ListBase2_93_0 asset_libraries;
    char keyconfigstr[64];
    short undosteps;
    char _pad1[2];
    int undomemory;
    float gpu_viewport_quality;
    short gp_manhattandist, gp_euclideandist, gp_eraser;
    short gp_settings;
    char _pad13[4];
    SolidLight2_93_0 light_param[4];
    float light_ambient[3];
    char gizmo_flag;
    char gizmo_size;
    char gizmo_size_navigate_v3d;
    char _pad3[5];
    short edit_studio_light;
    short lookdev_sphere_size;
    short vbotimeout, vbocollectrate;
    short textimeout, texcollectrate;
    int memcachelimit;
    int prefetchframes;
    float pad_rot_angle;
    char _pad12[4];
    short rvisize;
    short rvibright;
    short recent_files;
    short smooth_viewtx;
    short glreslimit;
    short color_picker_type;
    char auto_smoothing_new;
    char ipo_new;
    char keyhandles_new;
    char _pad11[4];
    char view_frame_type;
    int view_frame_keyframes;
    float view_frame_seconds;
    char _pad7[6];
    short widget_unit;
    short anisotropic_filter;
    short tablet_api;
    float pressure_threshold_max;
    float pressure_softness;
    float ndof_sensitivity;
    float ndof_orbit_sensitivity;
    float ndof_deadzone;
    int ndof_flag;
    short ogl_multisamples;
    short image_draw_method;
    float glalphaclip;
    short autokey_mode;
    short autokey_flag;
    short animation_flag;
    char text_render;
    char navigation_mode;
    float view_rotate_sensitivity_turntable;
    float view_rotate_sensitivity_trackball;
    ColorBand2_93_0 coba_weight;
    float sculpt_paint_overlay_col[3];
    float gpencil_new_layer_col[4];
    char drag_threshold_mouse;
    char drag_threshold_tablet;
    char drag_threshold;
    char move_threshold;
    char font_path_ui[1024];
    char font_path_ui_mono[1024];
    int compute_device_type;
    float fcu_inactive_alpha;
    short pie_tap_timeout;
    short pie_initial_timeout;
    short pie_animation_timeout;
    short pie_menu_confirm;
    short pie_menu_radius;
    short pie_menu_threshold;
    short opensubdiv_compute_type;
    short _pad6;
    char factor_display_type;
    char viewport_aa;
    char render_display_type;
    char filebrowser_display_type;
    char sequencer_disk_cache_dir[1024];
    int sequencer_disk_cache_compression;
    int sequencer_disk_cache_size_limit;
    short sequencer_disk_cache_flag;
    short sequencer_proxy_setup;
    float collection_instance_empty_size;
    char text_flag;
    char _pad10[1];
    char file_preview_type;
    char statusbar_flag;
    WalkNavigation2_93_0 walk_navigation;
    UserDef_SpaceData2_93_0 space_data;
    UserDef_FileSpaceData2_93_0 file_space_data;
    UserDef_Experimental3_2_0 experimental;
    UserDef_Runtime2_93_0 runtime;
};

struct VFont3_2_0 {
    ID3_2_0 id;
    char filepath[1024];
    void *data;
    PackedFile2_93_0 *packedfile;
    PackedFile2_93_0 *temp_pf;
};

struct wmXrData3_2_0 {
    void *runtime;
    XrSessionSettings3_2_0 session_settings;
};

struct wmWindowManager3_2_0 {
    ID3_2_0 id;
    wmWindow3_2_0 *windrawable;
    wmWindow3_2_0 *winactive;
    ListBase2_93_0 windows;
    short initialized;
    short file_saved;
    short op_undo_depth;
    short outliner_sync_select_dirty;
    ListBase2_93_0 operators;
    ListBase2_93_0 notifier_queue;
    ReportList2_93_0 reports;
    ListBase2_93_0 jobs;
    ListBase2_93_0 paintcursors;
    ListBase2_93_0 drags;
    ListBase2_93_0 keyconfigs;
    wmKeyConfig2_93_0 *defaultconf;
    wmKeyConfig2_93_0 *addonconf;
    wmKeyConfig2_93_0 *userconf;
    ListBase2_93_0 timers;
    void *autosavetimer;
    void *undo_stack;
    char is_interface_locked;
    char _pad[7];
    void *message_bus;
    wmXrData3_2_0 xr;
};

struct WorkSpace3_2_0 {
    ID3_2_0 id;
    ListBase2_93_0 layouts;
    ListBase2_93_0 hook_layout_relations;
    ListBase2_93_0 owner_ids;
    ListBase2_93_0 tools;
    char _pad[4];
    int object_mode;
    int flags;
    int order;
    char *status_text;
    AssetLibraryReference3_0_0 asset_library_ref;
};

#endif
